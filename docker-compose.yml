version: "3.7"

services:
  blog-app-frontend-http:
    build:
      context: .
      dockerfile: docker/app-frontend-http/Dockerfile
    volumes:
      - ./docker/app-frontend-http/conf/etc/nginx/conf.d/:/etc/nginx/conf.d/
      - ./app/assets/:/var/www/html/public/assets/
    links:
      - blog-app-frontend-php

  blog-app-frontend-php:
    build:
      context: .
      dockerfile: docker/app-frontend-php/Dockerfile
    volumes:
      - ./app/:/var/www/html/
      - ./.ebextensions/:/var/www/html/.ebextensions
    environment:
      APP_ENV: dev
      EB_ENV: blog-dev
      DYNAMODB_CLIENT_ARGS: '{"version":"latest","region":"eu-central-1","endpoint":"http://db:8000","credentials":{"key": "fakeMyKeyId", "secret": "secret"}}'
    user: 1000:1000
    links:
      - db

  blog-app-init-db:
    build:
      context: .
      dockerfile: docker/app-frontend-php/Dockerfile
    command: ["/var/www/html/bin/console", "blog-app:init-db"]
    volumes:
      - ./app/:/var/www/html/
      - ./.ebextensions/:/var/www/html/.ebextensions
    environment:
      APP_ENV: dev
      EB_ENV: blog-dev
      DYNAMODB_CLIENT_ARGS: '{"version":"latest","region":"eu-central-1","endpoint":"http://db:8000","credentials":{"key": "fakeMyKeyId", "secret": "secret"}}'
    user: 1000:1000
    links:
      - db
    restart: "no"

  db:
    image: amazon/dynamodb-local
    restart: always
    volumes:
      - dynamodb-blog:/dbstore

volumes:
  dynamodb-blog: ~
